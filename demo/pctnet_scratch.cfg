[dataset]
# tensor type (float or double)
tensor_type = float

task_type = seg
root_dir  = /home/x/projects/PyMIC_project/PyMIC_examples/PyMIC_data/AtriaSeg/TrainingSet_crop
train_csv = demo/data/image_train.csv
valid_csv = demo/data/image_valid.csv
test_csv  = demo/data/image_test.csv

# modality number
modal_num = 1
train_batch_size = 2
valid_batch_size = 1
patch_size       = [64, 128, 128]

# data transforms
train_transform = [RandomCrop, NormalizeWithMeanStd, RandomFlip, LabelToProbability]
valid_transform = [NormalizeWithMeanStd, LabelToProbability]
test_transform  = [NormalizeWithMeanStd]

NormalizeWithMeanStd_channels =[0]

RandomCrop_foreground_focus = False
RandomCrop_foreground_ratio = None
RandomCrop_mask_label       = None
RandomCrop_inverse          = False

RandomFlip_flip_depth  = True
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = False 

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = PCTNet

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
input_size    = [64, 128, 128]
feature_chns  = [24, 48, 128, 256, 512]
dropout       = [0, 0, 0.2, 0.2, 0.2]
resolution_mode = 1
multiscale_pred = True


[training]
# list of gpus
gpus       = [0]

deep_supervise = True
loss_type     = [DiceLoss, CrossEntropyLoss]
loss_weight   = [0.5, 0.5]

# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5


# for lr schedular (StepLR)
lr_scheduler = StepLR
lr_gamma = 0.5
lr_step = 4000
early_stop_patience = 10000
ckpt_save_dir       = demo/model/pctnet_scratch

# start iter
iter_start = 0
iter_max   = 20000
iter_valid = 500
iter_save  = 10000

[testing]
# list of gpus
gpus       = [1]

ckpt_mode         = 1
output_dir        = demo/result/pctnet_scratch

sliding_window_enable = True
sliding_window_batch  = 8
sliding_window_size   = [64, 128, 128]
sliding_window_stride = [32, 64, 64]

